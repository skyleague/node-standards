name: Reusable Typescript Pipeline

on:
  workflow_call:
    inputs:
      artifact_path:
        description: Path of the build artifacts (multi-line)
        type: string
        required: false
        default: |
          dist
          .dist
      artifact_name:
        description: Custom name of the build artifacts
        type: string
        required: false
        default: build-artifacts
      standards_postinstall:
        description: Postinstall command to run on the standards job
        type: string
        required: false
      postinstall:
        description: Postinstall command to run on jobs
        type: string
        required: false
        default: '{}'
      working-directory:
        type: string
        required: false
        default: './'
    secrets:
      GITHUB_NPM_TOKEN:
        description: Token to install GitHub packages with
        required: false
      NPM_TOKEN:
        description: Token to install npm packages with
        required: false
    outputs:
      artifact_name:
        value: ${{ jobs.build.outputs.artifact_name }}

jobs:
  check:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - uses: actions/checkout@v3
      - uses: skyleague/node-standards/.github/actions/setup-node@main
        with:
          working-directory: ${{ inputs.working-directory }}
          postinstall: ${{ fromJson(inputs.postinstall)['check'] }}
        env:
          GITHUB_NPM_TOKEN: ${{ secrets.GITHUB_NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm run lint

  standards:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - uses: actions/checkout@v3
      - uses: skyleague/node-standards/.github/actions/setup-node@main
        with:
          working-directory: ${{ inputs.working-directory }}
          postinstall: ${{ inputs.standards_postinstall || fromJson(inputs.postinstall)['standards'] }}
        env:
          GITHUB_NPM_TOKEN: ${{ secrets.GITHUB_NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm run check:project

  types:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - uses: actions/checkout@v3
      - uses: skyleague/node-standards/.github/actions/setup-node@main
        with:
          working-directory: ${{ inputs.working-directory }}
          postinstall: ${{ fromJson(inputs.postinstall)['types'] }}
        env:
          GITHUB_NPM_TOKEN: ${{ secrets.GITHUB_NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm run check:types

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - uses: actions/checkout@v3
      - uses: skyleague/node-standards/.github/actions/setup-node@main
        with:
          working-directory: ${{ inputs.working-directory }}
          postinstall: ${{ fromJson(inputs.postinstall)['test'] }}
        env:
          GITHUB_NPM_TOKEN: ${{ secrets.GITHUB_NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm run check:coverage
